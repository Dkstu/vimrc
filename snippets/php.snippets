snippet for
	for (\$${1:i} = 0; \$${1:i} < ${2:0}; \$${1:i}++) {
		${3://}
	}

snippet foreach
	foreach (\$${1:array} as \$${2:key} => \$${3:value}) {
		${4://}
	}

snippet switch
	switch (${1:true}) {
		case ${2:true}:
			${3://}
			break;

		default:
			${4://}
			break;
	}

snippet func
	function ${1:functionName}(${2}) {
		${3://}
	}

snippet try
	try {
		${1://}
	} catch (${2:Exception} \$e) {
		${3://}
	}

snippet pubf
	public function ${1:methodName}(${2})
	{
		${3://}
	}

snippet pubsf
	public static function ${1:methodName}(${2})
	{
		${3://}
	}

snippet prof
	protected function ${1:methodName}(${2})
	{
		${3://}
	}

snippet prosf
	protected static function ${1:methodName}(${2})
	{
		${3://}
	}


snippet prif
	private function ${1:methodName}(${2})
	{
		${3://}
	}

snippet prisf
	private static function ${1:methodName}(${2})
	{
		${3://}
	}

snippet _c
	public function __construct(${1})
	{
		${2}
	}

snippet class
	namespace ${1:Foo\Bar};

	class ${2:className}
	{
		${3://}
	}

snippet aclass
	namespace ${1:Foo\Bar};

	abstract class ${2:className}
	{
		${3://}
	}

snippet interface
	namespace ${1:Foo\Bar};

	interface ${2:interfaceName}
	{
		${3://}
	}

snippet trait
	namespace ${1:Foo\Bar};

	trait ${2:traitName}
	{
		${3://}
	}

snippet this
	\$this->${1}

snippet .
	->${1}

snippet phpunit
	use PHPUnit\Framework\TestCase;

	class ${1}Test extends TestCase
	{
		/**
		 * @test
		 */
		public function ${2:methodName}()
		{
			${3://}
		}
	}

snippet test
    /**
     * @test
     */
	public function ${1:methodName}()
	{
		${2://}
	}
